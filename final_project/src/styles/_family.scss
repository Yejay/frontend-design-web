/* portfolio */
#family {
	padding: 50px 0;
}

/*    
	display: grid: This style sets the display property of the element to grid, creating a grid container for the child elements.

    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)): This style sets the grid-template-columns property of the element, 
	creating a grid with columns that have a minimum width of 250px and a maximum width of 1 fraction unit (1fr). 
	The auto-fit value ensures that the grid will automatically adjust the number of columns based on the size of the container, 
	so that the columns fill the container and no empty space is left.

    grid-gap: 40px: This style sets the grid-gap property of the element to 40px, adding a 40px gap between the grid items.
*/

.family-list {
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
	grid-gap: 40px;
	margin-top: 50px;
}

.family {
	border-radius: 10px;
	position: relative;
	overflow: hidden;
}

.family img {
	width: 100%;
	border-radius: 10px;
	display: block;
	transition: transform 0.5s;
}

/*    
	width: 100%: This style sets the width of the element to 100% of its parent.

    background: linear-gradient(rgba(255, 255, 255, 0.6), #25be58): This style sets the background color of the element to a linear gradient that goes from a transparent white to a green shade.

    position: absolute: This style sets the position of the element to absolute, meaning it will be positioned relative to its parent.

    overflow: hidden: This style sets the overflow property to hidden, meaning any content outside of the element will be hidden.

    justify-content: center: This style sets the justify-content property to center, aligning the child elements horizontally in the center.

    flex-direction: column: This style sets the flex-direction property to column, stacking the child elements vertically.

    text-align: center: This style sets the text-align property of the element to center, aligning the text horizontally in the center.

    transition: height 0.5s: This style sets the transition property of the height of the element to 0.5s, meaning the height of the element will change smoothly over 0.5 seconds.
*/

.layer {
	width: 100%;
	height: 0;
	background: linear-gradient(rgba(255, 255, 255, 0.6), #25be58);
	border-radius: 10px;
	position: absolute;
	left: 0;
	bottom: 0;
	overflow: hidden;
	display: flex;
	justify-content: center;
	flex-direction: column;
	padding: 0 40px;
	text-align: center;
	font-size: 1rem;
	transition: height 0.5s;
}

.layer h3 {
	font-weight: 800;
	margin-bottom: 20px;
}

/*.family:hover img: This selector targets all img elements within an element with the class "family" that are being hovered over. The transform: scale(1.1); style increases the size of the image by 10% when hovered.*/
.family:hover img {
	transform: scale(1.1);
}

/*.family:hover .layer: This selector targets all elements with the class "layer" within an element with the class "family" that are being hovered over. The height: 100%; style sets the height of the element to 100% of its parent when hovered.*/
.family:hover .layer {
	height: 100%;
}

/*.btn:hover: This selector targets all elements with the class "btn" that are being hovered over. The background: #25be58; style changes the background color of the element to a green shade when hovered.*/
.btn:hover {
	background: #25be58;
}
