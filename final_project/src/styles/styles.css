/* set the padding for the about section */
#about {
  padding: 5rem 0;
  color: #ababab;
}

/* set the margin and font size for the header text */
.header-text {
  margin-top: 4rem;
  font-size: 3rem;
}

/* set the margin, font size and font weight for the h1 tag inside the header text */
.header-text h1 {
  margin-top: 2rem;
  font-size: 4rem;
}

/* set the color for the span tag inside the header text */
.header-text span {
  color: #25be58;
}

/* set the display property and justification for the row */
.row {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}

/* set the width for the first column of the about section */
.about-col-1 {
  flex-basis: 35%;
}

/* set the width and border radius for the image inside the first column of the about section */
.about-col-1 img {
  width: 100%;
  border-radius: 10px;
}

/* set the width and font size for the second column of the about section */
.about-col-2 {
  flex-basis: 60%;
  font-size: 1.5rem;
}

/* set the font size, font weight and color for the sub-title */
.sub-title {
  font-size: 4rem;
  font-weight: 600;
  color: #080808;
}

.hidden {
  opacity: 0;
  filter: blur(0.5);
  transform: translateX(-100%);
  transition: all 1.5s;
}

.show {
  opacity: 1;
  filter: blur(0);
  transform: translateX(0);
}

/* Reset default styles for all elements */
* {
  margin: 0; /* Removes default margin */
  padding: 0; /* Removes default padding */
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif; /* Sets the default font-family */
  box-sizing: border-box; /* Makes sure that the total width and height of an element includes padding and borders */
}

/* Smooth scrolling effect for the whole document */
html {
  scroll-behavior: smooth;
}

/* Set default background and text color for the body element */
body {
  background: #fff;
  color: #080808;
}

/* Container class with 10px padding on both sides */
.container {
  padding: 1rem 10%; /* Adds 10px padding on the top and bottom and 10% padding on the left and right */
}

/* contact section */
.contact-info p {
  margin-top: 1.9rem;
}

/* set the style for the contact info icons */
.contact-info p i {
  color: #25be58;
  margin-right: 1rem;
  font-size: 1.6rem;
}

.social-icons {
  margin-top: 1rem;
}

/* set the style for the social icons */
.social-icons a {
  text-decoration: none;
  font-size: 2rem;
  margin-right: 1rem;
  color: #ababab;
  display: inline-block;
  transition: transform 0.5s;
}

/* change the color and transform the social icons on hover */
.social-icons a:hover {
  color: #25be58;
  transform: translateY(-0.3rem);
}

/* style the submit button */
.btn {
  display: inline-block;
  background: #25be58;
  cursor: pointer;
  display: block;
  margin: 1rem 0;
  border: 1px solid #25be58;
  padding: 0.9rem 2.5rem;
  border-radius: 0.4rem;
  color: #080808;
}

/* style the input fields and text area */
form input,
form textarea {
  width: 100%;
  border: 0;
  outline: none;
  background: #ababab;
  padding: 1rem;
  margin: 1rem 0;
  color: #000;
  font-size: 1rem;
  border-radius: 0.4rem;
}

/* style the copyright section */
.copyright {
  width: 100%;
  text-align: center;
  padding: 1.6rem 0;
  background: #ababab;
  margin-top: 1rem;
}

/* set the default styles for messages */
.message {
  margin-top: 0.6rem;
  padding: 0.6rem;
  width: 15rem;
  text-align: center;
  border-radius: 0.4rem;
}

/* style for success messages */
.success {
  background-color: #25be58;
  color: #000;
}

/* style for error messages */
.error {
  background-color: #ff5656;
  color: #000;
}

/* portfolio */
#family {
  padding: 50px 0;
}

/*    
	display: grid: This style sets the display property of the element to grid, creating a grid container for the child elements.

    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)): This style sets the grid-template-columns property of the element, 
	creating a grid with columns that have a minimum width of 250px and a maximum width of 1 fraction unit (1fr). 
	The auto-fit value ensures that the grid will automatically adjust the number of columns based on the size of the container, 
	so that the columns fill the container and no empty space is left.

    grid-gap: 40px: This style sets the grid-gap property of the element to 40px, adding a 40px gap between the grid items.
*/
.family-list {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-gap: 40px;
  margin-top: 50px;
}

.family {
  border-radius: 10px;
  position: relative;
  overflow: hidden;
}

.family img {
  width: 100%;
  border-radius: 10px;
  display: block;
  transition: transform 0.5s;
}

/*    
	width: 100%: This style sets the width of the element to 100% of its parent.

    background: linear-gradient(rgba(255, 255, 255, 0.6), #25be58): This style sets the background color of the element to a linear gradient that goes from a transparent white to a green shade.

    position: absolute: This style sets the position of the element to absolute, meaning it will be positioned relative to its parent.

    overflow: hidden: This style sets the overflow property to hidden, meaning any content outside of the element will be hidden.

    justify-content: center: This style sets the justify-content property to center, aligning the child elements horizontally in the center.

    flex-direction: column: This style sets the flex-direction property to column, stacking the child elements vertically.

    text-align: center: This style sets the text-align property of the element to center, aligning the text horizontally in the center.

    transition: height 0.5s: This style sets the transition property of the height of the element to 0.5s, meaning the height of the element will change smoothly over 0.5 seconds.
*/
.layer {
  width: 100%;
  height: 0;
  background: linear-gradient(rgba(255, 255, 255, 0.6), #25be58);
  border-radius: 10px;
  position: absolute;
  left: 0;
  bottom: 0;
  overflow: hidden;
  display: flex;
  justify-content: center;
  flex-direction: column;
  padding: 0 40px;
  text-align: center;
  font-size: 1rem;
  transition: height 0.5s;
}

.layer h3 {
  font-weight: 800;
  margin-bottom: 20px;
}

/*.family:hover img: This selector targets all img elements within an element with the class "family" that are being hovered over. The transform: scale(1.1); style increases the size of the image by 10% when hovered.*/
.family:hover img {
  transform: scale(1.1);
}

/*.family:hover .layer: This selector targets all elements with the class "layer" within an element with the class "family" that are being hovered over. The height: 100%; style sets the height of the element to 100% of its parent when hovered.*/
.family:hover .layer {
  height: 100%;
}

/*.btn:hover: This selector targets all elements with the class "btn" that are being hovered over. The background: #25be58; style changes the background color of the element to a green shade when hovered.*/
.btn:hover {
  background: #25be58;
}

nav {
  display: flex;
  align-items: center;
  justify-content: space-between;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 3;
  background: #fff;
  border-bottom: 2px solid #25be58;
  box-shadow: 0 5px 5px rgba(0, 0, 0, 0.2);
}

.logo {
  margin-left: 1rem;
  width: 140px;
}

nav ul li {
  display: inline-block;
  list-style: none;
  margin: 10px 20px;
}

nav ul li a {
  color: #080808;
  text-decoration: none;
  font-size: 1.5rem;
  position: relative;
}

nav ul li a::after {
  content: "";
  left: 0;
  width: 0;
  height: 3px;
  background: #25be58;
  position: absolute;
  bottom: -6px;
  transition: 0.5s;
}

nav ul li a:hover::after {
  width: 100%;
}

#services {
  padding: 30px 0;
}

/*    
	display: grid: This style sets the display property of the element to grid, creating a grid container for the child elements.

    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)): This style sets the grid-template-columns property of the element, 
	creating a grid with columns that have a minimum width of 250px and a maximum width of 1 fraction unit (1fr). 
	The auto-fit value ensures that the grid will automatically adjust the number of columns based on the size of the container, 
	so that the columns fill the container and no empty space is left.

    grid-gap: 40px: This style sets the grid-gap property of the element to 40px, adding a 40px gap between the grid items.

    margin-top: 50px: This style sets the margin-top property of the element to 50px, adding a 50px margin to the top of the element.
*/
.facts-list {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-gap: 40px;
  margin-top: 50px;
}

.facts-list div {
  background: #ababab;
  padding: 40px;
  font-size: 1.3rem;
  font-weight: 300;
  border-radius: 10px;
  transition: 0.5s;
}

.facts-list div i {
  font-size: 50px;
  margin-bottom: 30px;
}

.facts-list div h2 {
  font-size: 2rem;
  font-weight: 500;
  margin-bottom: 15px;
}

.facts-list div a {
  text-decoration: none;
  color: #fff;
  font-size: 1rem;
  margin-top: 20px;
  display: inline-block;
}

.facts-list div:hover {
  background: #25be58;
  transform: translateY(-10px);
}

/* css for small screens */
nav .fas {
  display: none;
}

@media only screen and (max-width: 800px) {
  .header-text h1 {
    font-size: 2rem;
  }
  nav .fas {
    margin-right: 1rem;
    display: block;
    font-size: 2rem;
  }
  nav ul {
    background: #25be58;
    position: fixed;
    top: 0;
    right: -200px;
    width: 200px;
    height: 100vh;
    padding-top: 50px;
    z-index: 2;
    transition: right 0.5s;
  }
  nav ul li {
    display: block;
    margin: 25px;
  }
  nav ul .fas {
    position: absolute;
    top: 25px;
    left: 25px;
    cursor: pointer;
  }
  .sub-title {
    font-size: 40px;
  }
  .about-col-1,
  .about-col-2 {
    flex-basis: 100%;
  }
  .about-col-1 {
    margin-bottom: 30px;
  }
  .about-col-2 {
    font-size: 1.2rem;
  }
  .tab-links {
    font-size: 16px;
    margin-right: 20px;
  }
}/*# sourceMappingURL=styles.css.map */